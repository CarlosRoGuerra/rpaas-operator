// +build !ignore_autogenerated

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasBind":           schema_pkg_apis_extensions_v1alpha1_RpaasBind(ref),
		"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasBindSpec":       schema_pkg_apis_extensions_v1alpha1_RpaasBindSpec(ref),
		"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasBindStatus":     schema_pkg_apis_extensions_v1alpha1_RpaasBindStatus(ref),
		"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasInstance":       schema_pkg_apis_extensions_v1alpha1_RpaasInstance(ref),
		"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasInstanceSpec":   schema_pkg_apis_extensions_v1alpha1_RpaasInstanceSpec(ref),
		"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasInstanceStatus": schema_pkg_apis_extensions_v1alpha1_RpaasInstanceStatus(ref),
		"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasPlan":           schema_pkg_apis_extensions_v1alpha1_RpaasPlan(ref),
		"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasPlanSpec":       schema_pkg_apis_extensions_v1alpha1_RpaasPlanSpec(ref),
		"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasPlanStatus":     schema_pkg_apis_extensions_v1alpha1_RpaasPlanStatus(ref),
	}
}

func schema_pkg_apis_extensions_v1alpha1_RpaasBind(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RpaasBind is the Schema for the rpaasbinds API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasBindSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasBindStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasBindSpec", "github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasBindStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_extensions_v1alpha1_RpaasBindSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RpaasBindSpec defines the desired state of RpaasBind",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_extensions_v1alpha1_RpaasBindStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RpaasBindStatus defines the observed state of RpaasBind",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_extensions_v1alpha1_RpaasInstance(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RpaasInstance is the Schema for the rpaasinstances API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasInstanceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasInstanceStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasInstanceSpec", "github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasInstanceStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_extensions_v1alpha1_RpaasInstanceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RpaasInstanceSpec defines the desired state of RpaasInstance",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_extensions_v1alpha1_RpaasInstanceStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RpaasInstanceStatus defines the observed state of RpaasInstance",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_extensions_v1alpha1_RpaasPlan(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RpaasPlan is the Schema for the rpaasplans API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasPlanSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasPlanStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasPlanSpec", "github.com/tsuru/rpaas-operator/pkg/apis/extensions/v1alpha1.RpaasPlanStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_extensions_v1alpha1_RpaasPlanSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RpaasPlanSpec defines the desired state of RpaasPlan",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_extensions_v1alpha1_RpaasPlanStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "RpaasPlanStatus defines the observed state of RpaasPlan",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
